@model TimeSchemaFieldDefinitionInformation         
@using Unify.Framework
@using Unify.Framework.Web
@{
    string dayTimeFormatDescription = string.Format(
            ConnectorControllerResources.DayTimeAndDateAndDateTimeFormatDescriptionTemplate,
            LoggingControllerConstants.DayTimeFormatCSharpEditMode,
            LoggingControllerConstants.DayTimeSampleEditMode);
}
      
<script type="text/javascript">
    $(document).ready(function () {
        $("#MinValueContainer").unifytimepicker(
            {
                includeDays: true,
                allowNegative: true
                
            }
        );
        $("#MaxValueContainer").unifytimepicker(
            {
                includeDays: true,
                allowNegative: true
            }
        );
    });
</script>

<fieldset>
    <legend>
        @ConnectorControllerResources.MinimumValueInnerValidatorLegendText
        @Html.CheckBoxFor(model => model.EnableMinValueFlag, new { @class = "CheckCollapse" })
        <span class="hint">@ConnectorControllerResources.MinimumValueInnerValidatorFlagDescription<span class="hint-pointer">&nbsp;</span></span>
    </legend>
    @using (Html.MetaDataFor(model => model.MinValue, new { description = string.Concat(ConnectorControllerResources.EntitySchemaRowMinValueDescription, " ", dayTimeFormatDescription) }, new { @class = "CheckSection" }))
    {
        @Html.LabelFor(model => model.MinValue, ConnectorControllerResources.EntitySchemaRowMinValueLabel)
        <span id="MinValueContainer">@Html.TextBoxFor(model => model.MinValue)</span>
    }
</fieldset>
<fieldset>
    <legend>
        @ConnectorControllerResources.MaximumValueInnerValidatorLegendText
        @Html.CheckBoxFor(model => model.EnableMaxValueFlag, new { @class = "CheckCollapse" })
        <span class="hint">@ConnectorControllerResources.MaximumValueInnerValidatorFlagDescription<span class="hint-pointer">&nbsp;</span></span>
    </legend>
    @using (Html.MetaDataFor(model => model.MaxValue, new { description = string.Concat(ConnectorControllerResources.EntitySchemaRowMaxValueDescription, " ", dayTimeFormatDescription) }, new { @class = "CheckSection" }))
    {
        @Html.LabelFor(model => model.MaxValue, ConnectorControllerResources.EntitySchemaRowMaxValueLabel)
        <span id="MaxValueContainer">@Html.TextBoxFor(model => model.MaxValue)</span>
    }
</fieldset>