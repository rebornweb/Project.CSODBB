@using Unify.Connect.Web.Extensions
@using Unify.Framework.Web
@using Unify.Product.IdentityBroker
@model EntitySearchTermsViewInformation

@{
    string removeSearchTermForRowImageUrl = Url.WebIcon("magifier_zoom_out.png");
    string editSearchTermForRowImageUrl = Url.WebIcon("magnifier_edit.png");

    foreach (var context in Model.SearchContexts)
    {
        @RenderSearchTerm(Model.PartitionId, context.Key, context.Value, removeSearchTermForRowImageUrl, editSearchTermForRowImageUrl)
    }
}

@if (!Model.SearchContexts.Any())
{
    <label id="noSearchTerms">@SchemaResources.CurrentNoSearchTermsMessage</label>
}

<script type="text/javascript">
    @ViewData.RetrieveListItems("UpdateEntityColumnSearch")
</script>


@helper RenderEditSearchTerm(Guid partitionId, Guid searchId, string editSearchTermForRowImageUrl)
{
    var editButtonTitle = EntitySchemaResources.EditSearchTermsTitle;
    var editButtonId = string.Concat("editSearchTerms_", partitionId, "_", searchId);

    var editButtonUrl = Url.Action("UpdateEntityColumnSearch", ViewContext.Controller.ControllerContext.RouteData.ExecutingControllerName(), new {partitionId, searchId, searchTerms = Model.SearchContext});
    var ajaxFunctionDialogScript = Html.AjaxFunctionDialog("UpdateEntityColumnSearch", editButtonId, editButtonUrl);
    ViewData.AddListItem("UpdateEntityColumnSearch", ajaxFunctionDialogScript);

    var editButtonContent = string.Concat("&nbsp;<a href=\"", editButtonUrl, "\"><img src=\"", editSearchTermForRowImageUrl, "\" title=\"", editButtonTitle, "\" alt=\"", editButtonTitle, "\" class=\"OperationButton\" id=\"", editButtonId, "\" /></a>");
    <span>@MvcHtmlString.Create(editButtonContent)</span>
}

@helper RenderSearchTerm(Guid partitionId, Guid searchContainerId, IEntitySearchContainerInformation container, string removeSearchTermForRowImageUrl, string editSearchTermForRowImageUrl)
{
    <div style="margin:7px">
        @{ Write(RenderDescription(container)); }
        
        @using (Html.BeginForm("SubmitRemoveEntityColumnSearch", ViewContext.Controller.ControllerContext.RouteData.ExecutingControllerName(), new { partitionId, searchContainerId }, FormMethod.Post, new{ @class = "IconForm"}))
        {
            Write(SubmitRemoveImage(partitionId, searchContainerId, removeSearchTermForRowImageUrl));    
        }

        @{ Write(RenderEditSearchTerm(partitionId, searchContainerId, editSearchTermForRowImageUrl)); }
    </div>
}

@helper RenderDescription(IEntitySearchContainerInformation container)
{
    var searchContainerInformationAdapter = new EntitySearchContainerInformationAdapter(
        new IdentifierEntitySearchInformationAdapter(EntitySearchIdentifierKeys.Keys),
        EntitySearchContainerKeys.Keys);
    
    <label style="border-color: grey; border: solid 1px; padding: 3px; display: inline">@searchContainerInformationAdapter.Transform(container)</label>
}

@helper SubmitRemoveImage(Guid partitionId, Guid searchContainerId, string removeSearchTermForRowImageUrl)
{
    string removeSearchTermsActionUrl = @Url.Action("SubmitRemoveEntityColumnSearch", ViewContext.Controller.ControllerContext.RouteData.ExecutingControllerName(), new { partitionId, searchContainerId });
    <input type="image" src="@removeSearchTermForRowImageUrl" alt="Remove Search Term" title="Remove Search Term" onclick = "@string.Concat("$.post('", removeSearchTermsActionUrl, "', function() { Redraw(); return false; }); return false;")"/>
}