@using Unify.Connect.Web
@model JoinTransformationViewInformation

<div>
    
    JOIN ON
    
    <p>
        &nbsp;&nbsp;&nbsp;&nbsp;
        @if (Model.JoinConnectorExists)
        {
            <a href="@Url.Action("ConnectorDetails", "Connector", new { area = "", connectorId = Model.RelationshipConnectorId })">@Model.JoinConnectorName</a>
        }
        else
        {
            <span>@Model.RelationshipConnectorId</span>
            <span class="ui-state-error-text">(Connector could not be found)</span>
        }
    </p>
    
    @try
    {
        var relationships = ExtensibleTransformationControllerExtensions.Deserialize(Model.Relationships.Text);
            
        <text>WHERE</text>
    
        foreach (var line in relationships)
        {
            <p>
                &nbsp;&nbsp;&nbsp;&nbsp;[@line.Key] == [@line.Value]
            </p>
        }
    }
    catch (Exception)
    {
        <p>@Model.Relationships.Text</p>       
    }
    
    @if (Model.WindowType == WindowType.SlidingDateWindow)
    {
        <p>
            &nbsp;&nbsp;&nbsp;&nbsp;[@Model.DateRelationalInformation.StartKey] - "@Model.DateRelationalInformation.StartOffset" < @@NOW 
        </p>
        
        <p>
            &nbsp;&nbsp;&nbsp;&nbsp;[@Model.DateRelationalInformation.EndKey] - "@Model.DateRelationalInformation.EndOffset" > @@NOW
        </p>
    }
    
    SELECT 
    <p>
        &nbsp;&nbsp;&nbsp;&nbsp;@Model.SelectionType
    
        @if (Model.SelectionType == SelectionType.Priority)
        {
            <span>ON [</span>@Model.PrioritySelectionInformation.PriorityKey<span>]</span>
                        if (Model.PrioritySelectionInformation.DefinePriorityStructure)
                        {
                <span>( @Model.PrioritySelectionInformation.PriorityValues )</span>
                        }
        }
    </p>
    
    @if (Model.MapRelationshipDistinguishedName || Model.Mappings.Text.Length > 0)
    {
        <text>MAP</text>
    }
    
    @try
    {
        var mappings = ExtensibleTransformationControllerExtensions.Deserialize(Model.Mappings.Text);

        foreach (var line in mappings)
        {
            <p>
                &nbsp;&nbsp;&nbsp;&nbsp;[@line.Key] -> <span class="TransformationAddedField">[@line.Value]</span>
            </p>
        }
    }
    catch (Exception)
    {
        <p>@Model.Mappings.Text</p>
    }
    
    @if (Model.MapRelationshipDistinguishedName)
    {
        <p>
            &nbsp;&nbsp;&nbsp;&nbsp;DN:"@Model.Template" -> <span class="TransformationAddedField">[@Model.DistinguishedNameTarget]</span>
        </p>
    }

</div>