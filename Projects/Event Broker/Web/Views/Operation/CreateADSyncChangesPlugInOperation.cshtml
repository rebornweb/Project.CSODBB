@model ADSyncChangesPlugInConfigurationViewInformation
           
@using Unify.EventBroker.Web
@using Unify.Framework.Web

@{
    ViewBag.Title = Html.Title(string.Format(TitleResources.CreatePlugInTitleTemplate, Model.CreateOrUpdateText, TitleResources.CreateADSyncChangesOperationTitleCaption));   
}

@if (!Model.ApplicableAgents.Any())
{
    <p>@string.Format(
        OperationControllerResources.NoApplicableAgentMessageTemplate, 
        OperationControllerResources.PlugInOperationsADSyncChangesName, 
        OperationControllerResources.AgentsADName)
        
        @if (Html.IsInRole(UnifyRoles.Write))
        { 
            @Html.ActionLink("Create Agent", "Create", "Agents", 
                new { agentType = AgentPlugInNames.ADAgentPlugInName},
                null)
        }
        else 
        {
            <label>@OperationControllerResources.CreateAgentInsufficientPermissions</label>
        }
    </p>
}
else 
{
    using (Html.DecorateForm(
            () => Html.BeginForm("CreatePlugInOperation", "Operation", FormMethod.Post, new { id = "CreateOperationForm" }),
            Model.CreateOrUpdateText,
            "CreateOperationForm",
            OperationResources.ConfigureOperationAltText, "submitButton"))
    {
        <div>
            @Html.EditorFor(model => model, "OperationDisplayName")
            
            @using (Html.MetaDataFor(model => model.AgentId, new { description = OperationControllerResources.SelectAgentDescription }, new { @class = "chzn-container" }))
            {
                @Html.LabelFor(model => model.AgentId, OperationControllerResources.SelectAgentName)
                @Html.DropDownListFor(model => model.AgentId,
                            new SelectList(
                                Model.ApplicableAgents,
                                "Id",
                                "Name",
                                Model.ApplicableAgents.Any(agent => agent.Id == Model.AgentId)
                                ? Model.ApplicableAgents.Where(agent => agent.Id == Model.AgentId).Select(agent => agent).First()
                                : Model.ApplicableAgents.First()),
                                new { @class = "chzn-select" })
            }

            <fieldset>
                <legend>@OperationControllerResources.ADSyncChangesPlugInOperationInformationText</legend>
                
                @using (Html.MetaDataFor(model => model.Filter, new { description = OperationControllerResources.FilterDescription }))
                {
                    @Html.LabelFor(model => model.Filter, OperationControllerResources.FilterName)
                    @Html.TextBoxFor(model => model.Filter)
                }
                
                @using (Html.MetaDataFor(model => model.OuName, new { description = OperationControllerResources.ADSyncDomainDescription }))
                {
                    @Html.LabelFor(model => model.OuName, OperationControllerResources.ADSyncDomainName)
                    @Html.TextBoxFor(model => model.OuName)
                }

            </fieldset>
            
            <fieldset>
                @Html.EditorFor(model => model, "CheckOperationInnerDetails")
            </fieldset>

        </div>
    }
}
