<html>
<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Students Missing SAS DATA for a selected school (Version 2.0)</title>
<style type="text/css">
	body      {background-color:wheat;}
	table     {width:100%;font-family:Tahoma; font-size:85%;background-color:lightgrey;}
	table.data     {width:90%;font-family:Tahoma; font-size:80%;background-color:lightgrey;}
	td.tbname {font-weight:bold; background-color:papayawhip;font-size:200%;}
	td.tbhelp {font-weight:normal; background-color:papayawhip;}
	td.head   {font-weight:bold; background-color:buttonface;}
	td.data   {background-color:cornsilk;}
	td.bold   {font-weight:bold; background-color:cornsilk;}
	td.boldred   {font-weight:bold; color:red; background-color:cornsilk;}
	textarea  {font-size:80%;background-color:lightgrey;}
	textarea.hide  {display:none;}
	textarea.sqlrows  {font-size:90%;background-color:papayawhip;}
	textarea.select  {font-size:80%;background-color:lightgrey;}
	textarea.update  {font-size:80%;background-color:papayawhip;}
</style>
<Script Language="VBScript">
<!--
Option Explicit

' https://bytes.com/topic/sql-server/answers/83654-can-i-return-output-stored-procedure-into-hta-display-browser

Const DATA_SOURCE = "OCCCP-DB222"
' https://stackoverflow.com/questions/9393207/cannot-resolve-the-collation-conflict-between-sql-latin1-general-cp1-ci-as-and
Const DB_PREFIX = "SAS2000_LIVE_"
Const DEBUG_FLAG = True
Const UPD_TITLE = "Update student records in SAS"
Const UPD_CONFIRMATION = "Click OK to proceed to YYYYY."
Const EMAIL_SUFFIX = "@dbbstu.catholic.edu.au"
Const DET_SCHOOLCODE = "NSWDETSchoolCode"
Const PDF_HELP = "HTA Usage Guide.pdf"

' Report Names
Const REPORT_MissingUSINs = "Missing USINs"
Const REPORT_MissingCeiders = "Missing CeIders (MIM)"
Const REPORT_MissingCandidates = "Missing Candidates (SAS)"
Const REPORT_MismatchingCeiders = "Mismatching Ceiders (SAS/MIM)"
Const REPORT_MissingLockers = "Missing Lockers (SAS)"
Const REPORT_MissingAccounts = "Missing Accounts (MIM)"
Const REPORT_MismatchingLockers = "Mismatching Lockers (SAS/MIM)"
Const REPORT_MissingEmails = "Missing Emails (SAS)"
Const REPORT_MismatchingEmails = "Mismatching Emails (SAS/MIM)"

Dim oConnection
Set oConnection = CreateObject("ADODB.Connection")
oConnection.Open "Provider=SQLOLEDB;Data Source=" & DATA_SOURCE & ";Integrated Security=SSPI"

Sub printline(linetoprint)
	' called for messages displaying outcomes
	Dim saveline, displayline
    saveline = DataArea.InnerHTML
    displayline = "<font color='Navy' >"  & _
        saveline & "<br>" & FormatDateTime(Now(),3) & " " & linetoprint
    DataArea.InnerHTML =  displayline 
    saveline = displayline
End Sub

Sub GetSchoolData()

	Dim strSQL, oRecordSet, oSchoolDatabase, schoolDatabaseName, optionElt, optionName, textNode, oUpdateButton, oReport, reportName, reportNames

	Set oReport = document.getElementById("ReportName")
	reportName = oReport.Value
	reportNames = Array(REPORT_MissingUSINs, REPORT_MissingCeiders, REPORT_MissingCandidates, REPORT_MismatchingCeiders, REPORT_MissingLockers, REPORT_MissingAccounts, REPORT_MismatchingLockers, REPORT_MissingEmails, REPORT_MismatchingEmails)

	' construct report combo box
	Set optionElt = document.createElement("option")
	optionElt.setAttribute "selected", "selected"
	optionElt.setAttribute "value", ""
	Set textNode = document.createTextNode("Select report ...")
	optionElt.appendChild textNode
	oReport.appendChild optionElt
	For Each optionName in reportNames
		Set optionElt = document.createElement("option")
		optionElt.setAttribute "value", optionName
		Set textNode = document.createTextNode(optionName)
		optionElt.appendChild textNode
		oReport.appendChild optionElt
	Next 

	' construct school code combo box
	strSQL = "SELECT name FROM sys.databases WHERE name LIKE '" & DB_PREFIX & "%'"

	Set oSchoolDatabase = document.getElementById("SchoolDatabaseName")
	Set oUpdateButton = document.getElementById("btnUpdateStudents")
	oUpdateButton.disabled = "disabled"

	Set oRecordSet = oConnection.Execute(strSQL)
	Set optionElt = document.createElement("option")
	optionElt.setAttribute "selected", "selected"
	optionElt.setAttribute "value", ""
	Set textNode = document.createTextNode("Select school ...")
	optionElt.appendChild textNode
	oSchoolDatabase.appendChild optionElt

	Do While Not oRecordSet.EOF
		optionName = Replace(oRecordSet.Fields(0).Value, DB_PREFIX, "")
		Set optionElt = document.createElement("option")
		optionElt.setAttribute "value", optionName
		Set textNode = document.createTextNode(optionName)
		optionElt.appendChild textNode
		oSchoolDatabase.appendChild optionElt
		oRecordSet.MoveNext
	Loop	
	oRecordSet.Close

End Sub

Function GetHelpMessage()

	Dim strMessage, schoolDatabaseName, reportName
	Const HELP_BASIC = "... YYYYY for the selected school."

	schoolDatabaseName = document.getElementById("SchoolDatabaseName").Value
	reportName = document.getElementById("ReportName").Value

	Select Case reportName

		Case REPORT_MissingUSINs
			strMessage = Replace(HELP_BASIC, "YYYYY", "assign ALL SAS students with the generated 'NewUSIN' value")

		Case REPORT_MissingCandidates
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify and update ALL missing SAS Candidate Numbers with the MIM-sourced CEnet CeIder number for the matching USIN")

		Case REPORT_MissingLockers
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify and update ALL missing SAS Locker Numbers with the MIM-sourced Email alias for the matching USIN")

		Case REPORT_MissingEmails
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify and update ALL missing SAS Locker Numbers with the MIM-sourced '" & EMAIL_SUFFIX & "' Email for the matching USIN")

		Case REPORT_MissingCeiders
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify (ONLY) ALL SAS students with a missing MIM-sourced CEnet CeIder number for the matching USIN")

		Case REPORT_MismatchingCeiders
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify (ONLY) ALL student Candidate Numbers which do not match the MIM-sourced CEnet CeIder number for the matching USIN")

		Case REPORT_MissingAccounts
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify (ONLY) ALL SAS students with a missing MIM-sourced Email alias (AD account name) for the matching USIN")

		Case REPORT_MismatchingLockers
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify (ONLY) ALL student Locker Numbers which do not match the MIM-sourced Email alias (AD account name) for the matching USIN")

		Case REPORT_MismatchingEmails
			strMessage = Replace(HELP_BASIC, "YYYYY", "identify (ONLY) ALL student Emails which do not match the MIM-sourced '" & EMAIL_SUFFIX & "' Email for the matching USIN")

		Case Else
			strMessage = ""

	End Select

	GetHelpMessage = strMessage

End Function

Sub GetSchoolInfo()

	Dim strSQL, strValue, oRecordSet, oSchoolDatabase, schoolDatabaseName, schoolResultTable, i, rowCount

	' get school code from combo box selection
	Set oSchoolDatabase = document.getElementById("SchoolDatabaseName")
	schoolDatabaseName = oSchoolDatabase.Value

	If schoolDatabaseName = "" Then
		Exit Sub
	End If

	strSQL = "SELECT Code, SchoolName "  & vbNewLine & _
		"FROM [SAS2IDM_SAS2IDM_LIVE].[dbo].[SAS2IDMSchool] " & vbNewLine & _
		"WHERE SchoolID = '" & schoolDatabaseName & "'" & vbNewLine & _
		"AND Archived = 'N'"

	If DEBUG_FLAG Then
		document.getElementById("SQLSelectCommand").Value = strSQL
		'document.getElementById("SQLSelectCommand").rows = 13
	'Else
	'	document.getElementById("SQLSelectCommand").Class = "hide"
	End If
	Set oRecordSet = oConnection.Execute(strSQL)
	
	schoolResultTable = "<table border=""0"">"
	schoolResultTable = schoolResultTable & "<thead><tr>"
	schoolResultTable = schoolResultTable & "<td class=""head"">ReportName</td>"
	For i = 0 To oRecordSet.Fields.Count - 1
		schoolResultTable = schoolResultTable & _
		"<td class=""head"">" & _
		oRecordSet.Fields(i).Name & _
		"</td>"
	Next
	schoolResultTable = schoolResultTable & "<td class=""head"">Use this report to ...</td>"
	schoolResultTable = schoolResultTable & "</tr></thead><tbody>"

	If oRecordSet.EOF Then
	    printline "No school details found for School ID: " & schoolDatabaseName & ". Please select another school."
	Else

		rowCount = 0
		Do While Not oRecordSet.EOF
			rowCount = rowCount + 1
			schoolResultTable = schoolResultTable & "<tr>"
			schoolResultTable = schoolResultTable & "<td class='head'>" & document.getElementById("ReportName").Value & "</td>"	
			For i = 0 To oRecordSet.Fields.Count - 1
				strValue = "&nbsp;"
				If (Len(oRecordSet.Fields(i).Value) > 0) Then
					strValue = oRecordSet.Fields(i).Value
				End If
				schoolResultTable = schoolResultTable & _
				"<td class='tbhelp'>" & strValue & "</td>"	
			Next
			schoolResultTable = schoolResultTable & "<td class='tbhelp'>" & GetHelpMessage() & "</td>"	
			schoolResultTable = schoolResultTable & "</tr>"
			oRecordSet.MoveNext
		Loop	
		schoolResultTable = schoolResultTable & "</tbody></table>"

	End If
	
	oRecordSet.Close

	SchoolInfo.innerHTML = schoolResultTable
	
End Sub

Function GetReportSQL(byVal UpdateMode)

	Dim strSQL, schoolDatabaseName, reportName, strSQL_USINMatching

	schoolDatabaseName = document.getElementById("SchoolDatabaseName").Value
	reportName = document.getElementById("ReportName").Value
	
	Select Case UpdateMode
		Case REPORT_MissingEmails
			strSQL_USINMatching = "SELECT SYSTEM_USER, Student.PersonID As [USIN], CONCAT([AllMIMStudents].[accountName],'" & EMAIL_SUFFIX & "') AS [MIM.Email] "  & vbNewLine & _
				"FROM [" & DB_PREFIX & schoolDatabaseName & "].[dbo].Student " & vbNewLine & _
				"LEFT JOIN [" & DB_PREFIX & schoolDatabaseName & "].[dbo].School on School.ID = Student.PrevSchoolID " & vbNewLine & _
				"LEFT JOIN [MIM_SyncReplica].[dbo].[AllMIMStudents] on AllMIMStudents.[USIN] = Student.UniversalIdentificationNumber " & vbNewLine & _
				"	AND AllMIMStudents.physicalDeliveryOfficeName = '" & schoolDatabaseName & "'"

		Case REPORT_MissingLockers
			strSQL_USINMatching = "SELECT SYSTEM_USER, Student.PersonID As [USIN], [AllMIMStudents].[accountName] "  & vbNewLine & _
				"FROM [" & DB_PREFIX & schoolDatabaseName & "].[dbo].Student " & vbNewLine & _
				"LEFT JOIN [" & DB_PREFIX & schoolDatabaseName & "].[dbo].School on School.ID = Student.PrevSchoolID " & vbNewLine & _
				"LEFT JOIN [MIM_SyncReplica].[dbo].[AllMIMStudents] on AllMIMStudents.[USIN] = Student.UniversalIdentificationNumber " & vbNewLine & _
				"	AND AllMIMStudents.physicalDeliveryOfficeName = '" & schoolDatabaseName & "'"

		Case REPORT_MissingUSINs
			strSQL_USINMatching = "SELECT 'UPDATE',Student.[PersonID],SYSTEM_USER,[TransferCode],[NDOB],[House],[Form],[Distance],[StudentType] " & vbNewLine & _
				"	,[HomeGroup],[Rank],[Youngest],[Oldest],[EntryYearLevel],[StartYear],[StartDate],[PrevSchoolID],[PrevLevel] " & vbNewLine & _
				"	,[Maintenance],Student.[CentrelinkBenefits],[Austudy],[ScholarshipType],[LiveAtHome],[FeeFlag],[PreEnrolment] " & vbNewLine & _
				"	,[CampusID],[LastLevel],[Repeat],[FirstAustYear],[FirstAustSchoolID],[DateLeft],[ReasonLeft],[Conveyance] " & vbNewLine & _
				"	,[LowestLevel],[HighestLevel],[TransitionalPrep],[Inactive],[InactiveFrom],[InactiveTo],[InactiveReason] " & vbNewLine & _
				"	,[AttendanceRecord],[LOTEBackgroundDescription],[LOTEDifferentThanInPrimary],[QsaLearnerID],[QsaYpetFlag] " & vbNewLine & _
				"	,[QsaGoal],[QsaLearnerLoginPassword] " & vbNewLine & _
				"	,CONCAT('281',(Select REPLACE(Value,'281_','') AS [DET] from [" & DB_PREFIX & schoolDatabaseName & "].[dbo].[Control] where Code = '" & DET_SCHOOLCODE & "'),stuv.Code) AS [UniversalIdentificationNumber] " & vbNewLine & _
				"	,[ReturningStatus],[Subject],Student.[Class],[NextClass] " & vbNewLine & _
				"	,[LastClass],[StateAllowance],[StateAllowanceContactID],[StateStudentNumber],[RegistrationNumber],[CandidateNumber] " & vbNewLine & _
				"	,[CardNumber],[LearningSupport],[IndividualLearningPlans],[AccessRestriction],[CategoryID],[ApplyForServicesFunding] " & vbNewLine & _
				"	,[DetHomeSchoolLO],[NotifiedDHSLO],[NotifiedDHSLODate],[NotifiedDHSLOTime],[DUXAwardEligible],[ExcludeFromFeeGeneration] " & vbNewLine & _
				"	,[AlumniClassOf],[AlumniStatus],[AlumniFamilyKey],[LeavingAddrID],[NewAddrID],[WithholdStudentReport],Student.[UpdatedWhen] " & vbNewLine & _
				"FROM [" & DB_PREFIX & schoolDatabaseName & "].[Person].Student " & vbNewLine & _
				"INNER JOIN ( " & vbNewLine & _
				"	SELECT PersonId, Code, FirstName, LastName, DOB " & vbNewLine & _
				"	FROM [" & DB_PREFIX & schoolDatabaseName & "].[dbo].Student " & vbNewLine & _
				"	WHERE ISNULL(UniversalIdentificationNumber,'0') = '0' " & vbNewLine & _
				"	AND PreEnrolment = 'N' " & vbNewLine & _
				") stuv ON stuv.PersonId = Student.PersonId " & vbNewLine & _
				"LEFT JOIN [" & DB_PREFIX & schoolDatabaseName & "].[dbo].School on School.ID = Student.PrevSchoolID AND School.Active = 'Y' " & vbNewLine & _
				"LEFT JOIN [MIM_SyncReplica].[dbo].[AllMIMStudents] on 1=1 " & vbNewLine & _
				"    AND AllMIMStudents.FirstName = stuv.FirstName " & vbNewLine & _
				"    AND AllMIMStudents.LastName = stuv.LastName " & vbNewLine & _
				"    AND ISNULL(FORMAT(CAST(AllMIMStudents.DOB AS Date),'d'),GETDATE()) = ISNULL(stuv.DOB,GETDATE()) "

		Case REPORT_MissingCandidates
			strSQL_USINMatching = "SELECT 'UPDATE',Student.[PersonID],SYSTEM_USER,[TransferCode],[NDOB],[House],[Form],[Distance],[StudentType] " & vbNewLine & _
				"	,[HomeGroup],[Rank],[Youngest],[Oldest],[EntryYearLevel],[StartYear],[StartDate],[PrevSchoolID],[PrevLevel] " & vbNewLine & _
				"	,[Maintenance],Student.[CentrelinkBenefits],[Austudy],[ScholarshipType],[LiveAtHome],[FeeFlag],[PreEnrolment] " & vbNewLine & _
				"	,[CampusID],[LastLevel],[Repeat],[FirstAustYear],[FirstAustSchoolID],[DateLeft],[ReasonLeft],[Conveyance] " & vbNewLine & _
				"	,[LowestLevel],[HighestLevel],[TransitionalPrep],[Inactive],[InactiveFrom],[InactiveTo],[InactiveReason] " & vbNewLine & _
				"	,[AttendanceRecord],[LOTEBackgroundDescription],[LOTEDifferentThanInPrimary],[QsaLearnerID],[QsaYpetFlag] " & vbNewLine & _
				"	,[QsaGoal],[QsaLearnerLoginPassword],[UniversalIdentificationNumber],[ReturningStatus],[Subject],Student.[Class],[NextClass] " & vbNewLine & _
				"	,[LastClass],[StateAllowance],[StateAllowanceContactID],[StateStudentNumber],[RegistrationNumber],AllMIMStudents.[csoCeIder] as [CandidateNumber] " & vbNewLine & _
				"	,[CardNumber],[LearningSupport],[IndividualLearningPlans],[AccessRestriction],[CategoryID],[ApplyForServicesFunding] " & vbNewLine & _
				"	,[DetHomeSchoolLO],[NotifiedDHSLO],[NotifiedDHSLODate],[NotifiedDHSLOTime],[DUXAwardEligible],[ExcludeFromFeeGeneration] " & vbNewLine & _
				"	,[AlumniClassOf],[AlumniStatus],[AlumniFamilyKey],[LeavingAddrID],[NewAddrID],[WithholdStudentReport],Student.[UpdatedWhen] " & vbNewLine & _
				"FROM [" & DB_PREFIX & schoolDatabaseName & "].[Person].Student " & vbNewLine & _
				"INNER JOIN ( " & vbNewLine & _
				"	SELECT PersonId " & vbNewLine & _
				"	FROM [" & DB_PREFIX & schoolDatabaseName & "].[dbo].Student " & vbNewLine & _
				"	WHERE UniversalIdentificationNumber IS NOT NULL " & vbNewLine & _
				"	AND PreEnrolment = 'N' " & vbNewLine & _
				") stuv ON stuv.PersonId = Student.PersonId " & vbNewLine & _
				"LEFT JOIN [" & DB_PREFIX & schoolDatabaseName & "].[dbo].School on School.ID = Student.PrevSchoolID AND School.Active = 'Y' " & vbNewLine & _
				"INNER JOIN [MIM_SyncReplica].[dbo].[AllMIMStudents] on AllMIMStudents.[USIN] = Student.UniversalIdentificationNumber " & vbNewLine & _
				"	AND AllMIMStudents.physicalDeliveryOfficeName = '" & schoolDatabaseName & "'"

		Case Else
			strSQL_USINMatching = "SELECT Student.UniversalIdentificationNumber As [USIN], "  & vbNewLine & _
				"    AllMIMStudents.csoCeIder AS [MIM.CeIder], FORMAT(CAST(AllMIMStudents.DOB AS Date),'d') AS [MIM.DOB], " & vbNewLine & _
				"    [AllMIMStudents].[accountName] AS [MIM.EmailPrefix], " & vbNewLine & _
				"    CONCAT([AllMIMStudents].[accountName],'" & EMAIL_SUFFIX & "') AS [MIM.Email], " & vbNewLine & _
				"	 Student.Code, Student.CandidateNumber AS [Candidate Number], Student.LockerNumber AS [Locker Number], Student.Email, Student.FirstName, Student.LastName, Student.PreferredName AS [Preferred Name], " & vbNewLine & _
				"    Student.DOB, Student.Year, School.Name As [Previous School], School.Location As [Previous Location], Student.DateLeft, Student.ReasonLeft AS [Reason Left], Student.UpdatedWhen AS [Updated When] " & vbNewLine & _
				"FROM [" & DB_PREFIX & schoolDatabaseName & "].[dbo].Student " & vbNewLine & _
				"LEFT JOIN [" & DB_PREFIX & schoolDatabaseName & "].[dbo].School on School.ID = Student.PrevSchoolID " & vbNewLine & _
				"LEFT JOIN [MIM_SyncReplica].[dbo].[AllMIMStudents] on AllMIMStudents.[USIN] = Student.UniversalIdentificationNumber "

	End Select

	Select Case reportName

		Case REPORT_MissingUSINs
			If UpdateMode = REPORT_MissingUSINs Then
				strSQL = strSQL_USINMatching & vbNewLine & _
					"WHERE Student.PreEnrolment=0 " & vbNewLine & _
					"AND Student.Archived = 0 " & vbNewLine & _
					"AND (ISNULL(Student.UniversalIdentificationNumber,'0') = '0') "
			Else
				strSQL = "SELECT "  & vbNewLine & _
					"    CONCAT('281',(Select REPLACE(Value,'281_','') AS [DET] from [" & DB_PREFIX & schoolDatabaseName & "].[dbo].[Control] where Code = '" & DET_SCHOOLCODE & "'),Student.Code) As [NewUSIN], " & vbNewLine & _
					"    AllMIMStudents.SchoolID AS [MIM.SchoolID], AllMIMStudents.USIN AS [MIM.FormerUSIN?], AllMIMStudents.csoCeIder AS [MIM.CeIder], FORMAT(CAST(AllMIMStudents.DOB AS Date),'d') AS [MIM.DOB], " & vbNewLine & _
					"    [AllMIMStudents].[accountName] AS [MIM.EmailPrefix], " & vbNewLine & _
					"	 School.SchoolNumber AS [School Number], Student.Code, Student.CandidateNumber AS [Candidate Number], Student.LockerNumber AS [Locker Number], Student.FirstName, Student.LastName, " & vbNewLine & _
					"	 Student.PreferredName AS [Preferred Name], Student.DOB, Student.Year, Student.UniversalIdentificationNumber As [USIN], School.Name As [Previous School], School.Location As [Previous Location], " & vbNewLine & _
					"	 Student.DateLeft, Student.ReasonLeft AS [Reason Left], Student.TransferCode AS [Transfer Code], Student.UpdatedWhen AS [Updated When] " & vbNewLine & _
					"FROM [" & DB_PREFIX & schoolDatabaseName & "].[dbo].Student " & vbNewLine & _
					"LEFT JOIN [" & DB_PREFIX & schoolDatabaseName & "].[dbo].School on School.ID = Student.PrevSchoolID AND School.Active = 'Y' " & vbNewLine & _
					"LEFT JOIN [MIM_SyncReplica].[dbo].[AllMIMStudents] on 1=1	 " & vbNewLine & _
					"    AND AllMIMStudents.FirstName = Student.FirstName " & vbNewLine & _
					"    AND AllMIMStudents.LastName = Student.LastName " & vbNewLine & _
					"    AND ISNULL(FORMAT(CAST(AllMIMStudents.DOB AS Date),'d'),GETDATE()) = ISNULL(Student.DOB,GETDATE()) " & vbNewLine & _
					"	 AND AllMIMStudents.physicalDeliveryOfficeName = '" & schoolDatabaseName & "' " & vbNewLine & _
					"WHERE ISNULL(Student.UniversalIdentificationNumber,'0') = '0' and Student.PreEnrolment='N'"
			End If

		Case REPORT_MissingCeiders
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (ISNULL(AllMIMStudents.csoCeIder,'0') = '0')"

		Case REPORT_MissingCandidates
			If UpdateMode = REPORT_MissingCandidates Then
				strSQL = strSQL_USINMatching & vbNewLine & _
					"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment=0 " & vbNewLine & _
					"AND Student.Archived = 0 " & vbNewLine & _
					"AND (ISNULL(Student.CandidateNumber,'0') = '0') "
			Else
				strSQL = strSQL_USINMatching & vbNewLine & _
					"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N' " & vbNewLine & _
					"AND (ISNULL(Student.CandidateNumber,'0') = '0') "
			End If

		Case REPORT_MismatchingCeiders
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (Student.CandidateNumber IS NOT NULL AND AllMIMStudents.csoCeIder IS NOT NULL AND Student.CandidateNumber <> AllMIMStudents.csoCeIder)"

		Case REPORT_MissingLockers
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (ISNULL(Student.LockerNumber,'0') = '0')"

		Case REPORT_MissingAccounts
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (ISNULL([AllMIMStudents].[accountName],'0') = '0')"

		Case REPORT_MismatchingLockers
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (Student.LockerNumber IS NOT NULL AND [AllMIMStudents].[accountName] IS NOT NULL AND Student.LockerNumber <> [AllMIMStudents].[accountName])"

		Case REPORT_MissingEmails
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (ISNULL(Student.Email,'0') = '0')"

		Case REPORT_MismatchingEmails
			strSQL = strSQL_USINMatching & vbNewLine & _
				"WHERE Student.UniversalIdentificationNumber IS NOT NULL AND Student.PreEnrolment='N'" & vbNewLine & _
				"AND (Student.Email IS NOT NULL AND [AllMIMStudents].[accountName] IS NOT NULL AND Student.Email <> CONCAT([AllMIMStudents].[accountName],'" & EMAIL_SUFFIX & "'))"

		Case Else
			strSQL = ""

	End Select

	GetReportSQL = strSQL

End Function

Function GetUpdateSQL()

	Dim strSQL, schoolDatabaseName, reportName

	schoolDatabaseName = document.getElementById("SchoolDatabaseName").Value
	reportName = document.getElementById("ReportName").Value

	Select Case reportName
		Case REPORT_MissingUSINs
			strSQL = "DECLARE @ACTION	char (10) " & vbNewLine  & _
				"		,@PersonID            			int 		= NULL " & vbNewLine  & _
				"		,@UpdatedBy           			varchar(50) = NULL " & vbNewLine  & _
				"		,@TransferCode                  varchar(20) = NULL " & vbNewLine  & _
				"		,@NDOB                			nvarchar(50)= NULL " & vbNewLine  & _
				"		,@House               			varchar(50) = NULL " & vbNewLine  & _
				"		,@Form                			varchar(50) = NULL " & vbNewLine  & _
				"		,@Distance            			float       = NULL " & vbNewLine  & _
				"		,@StudentType    				varchar(50) = NULL " & vbNewLine  & _
				"		,@HomeGroup    					varchar(50) = NULL " & vbNewLine  & _
				"		,@Rank   						int         = NULL " & vbNewLine  & _
				"		,@Youngest  					bit         = NULL " & vbNewLine  & _
				"		,@Oldest    	   				bit         = NULL " & vbNewLine  & _
				"		,@EntryYearLevel   				varchar(50) = NULL " & vbNewLine  & _
				"		,@StartYear       				varchar(50) = NULL " & vbNewLine  & _
				"		,@StartDate       				datetime    = NULL " & vbNewLine  & _
				"		,@StartDate_passed              bit 		= NULL " & vbNewLine  & _
				"		,@PrevSchoolID      			int         = NULL " & vbNewLine  & _
				"		,@PrevLevel      				varchar(50) = NULL " & vbNewLine  & _
				"		,@Maintenance  					bit         = NULL " & vbNewLine  & _
				"		,@CentrelinkBenefits 			bit         = NULL " & vbNewLine  & _
				"		,@Austudy  						bit         = NULL " & vbNewLine  & _
				"		,@ScholarshipType  				varchar(50) = NULL " & vbNewLine  & _
				"		,@LiveAtHome  					bit         = NULL " & vbNewLine  & _
				"		,@FeeFlag 						varchar(50) = NULL " & vbNewLine  & _
				"		,@PreEnrolment  				bit         = NULL " & vbNewLine  & _
				"		,@CampusID  					int         = NULL " & vbNewLine  & _
				"		,@LastLevel  					varchar(50) = NULL " & vbNewLine  & _
				"		,@Repeat       					bit         = NULL " & vbNewLine  & _
				"		,@FirstAustYear       			varchar(10) = NULL " & vbNewLine  & _
				"		,@FirstAustSchoolID   			int         = NULL " & vbNewLine  & _
				"		,@DateLeft 						datetime    = NULL " & vbNewLine  & _
				"		,@DateLeft_passed               bit 		= NULL " & vbNewLine  & _
				"		,@ReasonLeft 					varchar(50) = NULL " & vbNewLine  & _
				"		,@Conveyance 					varchar(50) = NULL " & vbNewLine  & _
				"		,@LowestLevel 					varchar(50) = NULL " & vbNewLine  & _
				"		,@HighestLevel					varchar(50) = NULL " & vbNewLine  & _
				"		,@TransitionalPrep  			bit         = NULL " & vbNewLine  & _
				"		,@Inactive  					bit         = NULL " & vbNewLine  & _
				"		,@InactiveFrom    				datetime    = NULL " & vbNewLine  & _
				"		,@InactiveFrom_passed           bit 		= NULL " & vbNewLine  & _
				"		,@InactiveTo 					datetime    = NULL " & vbNewLine  & _
				"		,@InactiveReason 				varchar(200)= NULL " & vbNewLine  & _
				"		,@AttendanceRecord 				varchar(50) = NULL " & vbNewLine  & _
				"		,@LOTEBackgroundDescription 	varchar(50) = NULL " & vbNewLine  & _
				"		,@LOTEDifferentThanInPrimary 	bit         = NULL " & vbNewLine  & _
				"		,@QsaLearnerID 					varchar(20) = NULL " & vbNewLine  & _
				"		,@QsaYpetFlag 					bit         = NULL " & vbNewLine  & _
				"		,@QsaGoal                       varchar(50) = NULL " & vbNewLine  & _
				"		,@QsaLearnerLoginPassword       varchar(50) = NULL " & vbNewLine  & _
				"		,@UniversalIdentificationNumber varchar(20) = NULL " & vbNewLine  & _
				"		,@ReturningStatus               varchar(50) = NULL " & vbNewLine  & _
				"		,@Subject 						varchar(50) = NULL " & vbNewLine  & _
				"		,@Class 						varchar(50) = NULL " & vbNewLine  & _
				"		,@NextClass 					varchar(50) = NULL " & vbNewLine  & _
				"		,@LastClass 					varchar(50) = NULL " & vbNewLine  & _
				"		,@StateAllowance 				varchar(50) = NULL " & vbNewLine  & _
				"		,@StateAllowanceContactID 		int         = NULL " & vbNewLine  & _
				"		,@StateStudentNumber 			varchar(20) = NULL " & vbNewLine  & _
				"		,@RegistrationNumber  			varchar(50) = NULL " & vbNewLine  & _
				"		,@CandidateNumber 				varchar(50) = NULL " & vbNewLine  & _
				"		,@CardNumber 					varchar(50) = NULL " & vbNewLine  & _
				"		,@LearningSupport 				bit         = NULL " & vbNewLine  & _
				"		,@IndividualLearningPlans 		bit         = NULL " & vbNewLine  & _
				"		,@AccessRestriction 			bit         = NULL " & vbNewLine  & _
				"		,@CategoryID 					int         = NULL " & vbNewLine  & _
				"		,@ApplyForServicesFunding  		bit         = NULL " & vbNewLine  & _
				"		,@DetHomeSchoolLO				bit         = NULL " & vbNewLine  & _
				"		,@NotifiedDHSLO					varchar(255)= NULL " & vbNewLine  & _
				"		,@NotifiedDHSLODate				datetime    = NULL " & vbNewLine  & _
				"		,@NotifiedDHSLODate_passed      bit 		= NULL " & vbNewLine  & _
				"		,@NotifiedDHSLOTime 			varchar(8)  = NULL " & vbNewLine  & _
				"		,@DUXAwardEligible 				bit         = NULL " & vbNewLine  & _
				"		,@ExcludeFromFeeGeneration      bit         = NULL " & vbNewLine  & _
				"		,@AlumniClassOf                 int         = NULL " & vbNewLine  & _
				"		,@AlumniStatus                  varchar(50) = NULL " & vbNewLine  & _
				"		,@AlumniFamilyKey               varchar(50) = NULL " & vbNewLine  & _
				"		,@LeavingAddrID                 int         = NULL " & vbNewLine  & _
				"		,@NewAddrID                     int         = NULL " & vbNewLine  & _
				"		,@WithholdStudentReport         bit         = NULL " & vbNewLine  & _
				"		,@RowCount						int			= 0 " & vbNewLine  & _
				"		,@UpdatedWhen					datetime	= NULL " & vbNewLine  & _
				"		,@NewUpdatedBy					varchar(50) = SUSER_NAME() " & vbNewLine  & _
				"		,@NewUpdatedWhen				datetime	= NULL " & vbNewLine  & _
				"DECLARE StudentsToUpdate CURSOR FOR " & vbNewLine
			strSQL = strSQL + GetReportSQL(REPORT_MissingUSINs) & vbNewLine
			strSQL = strSQL + "OPEN StudentsToUpdate " & vbNewLine & _
				"FETCH NEXT FROM StudentsToUpdate INTO @ACTION,@PersonID,@UpdatedBy,@TransferCode,@NDOB,@House,@Form,@Distance,@StudentType,@HomeGroup,@Rank,@Youngest,@Oldest " & vbNewLine & _
				"	,@EntryYearLevel,@StartYear,@StartDate,@PrevSchoolID,@PrevLevel,@Maintenance,@CentrelinkBenefits,@Austudy " & vbNewLine & _
				"	,@ScholarshipType,@LiveAtHome,@FeeFlag,@PreEnrolment,@CampusID,@LastLevel,@Repeat,@FirstAustYear,@FirstAustSchoolID,@DateLeft " & vbNewLine & _
				"	,@ReasonLeft,@Conveyance,@LowestLevel,@HighestLevel,@TransitionalPrep,@Inactive,@InactiveFrom " & vbNewLine & _
				"	,@InactiveTo,@InactiveReason,@AttendanceRecord,@LOTEBackgroundDescription,@LOTEDifferentThanInPrimary,@QsaLearnerID,@QsaYpetFlag " & vbNewLine & _
				"	,@QsaGoal,@QsaLearnerLoginPassword,@UniversalIdentificationNumber,@ReturningStatus,@Subject,@Class,@NextClass,@LastClass " & vbNewLine & _
				"	,@StateAllowance,@StateAllowanceContactID,@StateStudentNumber,@RegistrationNumber,@CandidateNumber,@CardNumber,@LearningSupport " & vbNewLine & _
				"	,@IndividualLearningPlans,@AccessRestriction,@CategoryID,@ApplyForServicesFunding,@DetHomeSchoolLO,@NotifiedDHSLO,@NotifiedDHSLODate " & vbNewLine & _
				"	,@NotifiedDHSLOTime,@DUXAwardEligible,@ExcludeFromFeeGeneration,@AlumniClassOf,@AlumniStatus,@AlumniFamilyKey " & vbNewLine & _
				"	,@LeavingAddrID,@NewAddrID,@WithholdStudentReport,@UpdatedWhen " & vbNewLine & _
				"WHILE (@@FETCH_STATUS=0 ) " & vbNewLine & _
				"BEGIN " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.PersonID_update @pPersonID=@PersonID,@pUpdatedBy=@NewUpdatedBy,@pUpdatedWhen=@UpdatedWhen,@pNewUpdatedWhen=@NewUpdatedWhen output; " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.Student_Update @ACTION=@ACTION,@PersonID=@PersonID,@UpdatedBy=@NewUpdatedBy,@TransferCode=@TransferCode " & vbNewLine & _
				"		,@NDOB=@NDOB,@House=@House,@Form=@Form,@Distance=@Distance,@StudentType=@StudentType,@HomeGroup=@HomeGroup,@Rank=@Rank,@Youngest=@Youngest,@Oldest=@Oldest " & vbNewLine & _
				"		,@EntryYearLevel=@EntryYearLevel,@StartYear=@StartYear,@StartDate=@StartDate,@StartDate_passed=@StartDate_passed,@PrevSchoolID=@PrevSchoolID " & vbNewLine & _
				"		,@PrevLevel=@PrevLevel,@Maintenance=@Maintenance,@CentrelinkBenefits=@CentrelinkBenefits,@Austudy=@Austudy " & vbNewLine & _
				"		,@ScholarshipType=@ScholarshipType,@LiveAtHome=@LiveAtHome,@FeeFlag=@FeeFlag,@PreEnrolment=@PreEnrolment,@CampusID=@CampusID,@LastLevel=@LastLevel " & vbNewLine & _
				"		,@Repeat=@Repeat,@FirstAustYear=@FirstAustYear,@FirstAustSchoolID=@FirstAustSchoolID,@DateLeft=@DateLeft " & vbNewLine & _
				"		,@DateLeft_passed=@DateLeft_passed,@ReasonLeft=@ReasonLeft,@Conveyance=@Conveyance,@LowestLevel=@LowestLevel,@HighestLevel=@HighestLevel " & vbNewLine & _
				"		,@TransitionalPrep=@TransitionalPrep,@Inactive=@Inactive,@InactiveFrom=@InactiveFrom,@InactiveFrom_passed=@InactiveFrom_passed " & vbNewLine & _
				"		,@InactiveTo=@InactiveTo,@InactiveReason=@InactiveReason,@AttendanceRecord=@AttendanceRecord,@LOTEBackgroundDescription=@LOTEBackgroundDescription " & vbNewLine & _
				"		,@LOTEDifferentThanInPrimary=@LOTEDifferentThanInPrimary,@QsaLearnerID=@QsaLearnerID,@QsaYpetFlag=@QsaYpetFlag " & vbNewLine & _
				"		,@QsaGoal=@QsaGoal,@QsaLearnerLoginPassword=@QsaLearnerLoginPassword,@UniversalIdentificationNumber=@UniversalIdentificationNumber " & vbNewLine & _
				"		,@ReturningStatus=@ReturningStatus,@Subject=@Subject,@Class=@Class,@NextClass=@NextClass,@LastClass=@LastClass " & vbNewLine & _
				"		,@StateAllowance=@StateAllowance,@StateAllowanceContactID=@StateAllowanceContactID,@StateStudentNumber=@StateStudentNumber " & vbNewLine & _
				"		,@RegistrationNumber=@RegistrationNumber,@CandidateNumber=@CandidateNumber,@CardNumber=@CardNumber,@LearningSupport=@LearningSupport " & vbNewLine & _
				"		,@IndividualLearningPlans=@IndividualLearningPlans,@AccessRestriction=@AccessRestriction,@CategoryID=@CategoryID " & vbNewLine & _
				"		,@ApplyForServicesFunding=@ApplyForServicesFunding,@DetHomeSchoolLO=@DetHomeSchoolLO,@NotifiedDHSLO=@NotifiedDHSLO,@NotifiedDHSLODate=@NotifiedDHSLODate " & vbNewLine & _
				"		,@NotifiedDHSLODate_passed=@NotifiedDHSLODate_passed,@NotifiedDHSLOTime=@NotifiedDHSLOTime,@DUXAwardEligible=@DUXAwardEligible " & vbNewLine & _
				"		,@ExcludeFromFeeGeneration=@ExcludeFromFeeGeneration,@AlumniClassOf=@AlumniClassOf,@AlumniStatus=@AlumniStatus,@AlumniFamilyKey=@AlumniFamilyKey " & vbNewLine & _
				"		,@LeavingAddrID=@LeavingAddrID,@NewAddrID=@NewAddrID,@WithholdStudentReport=@WithholdStudentReport; " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.VSRStudentUpdate @OrgUnitID=1,@PersonID=@PersonID,@TransferType='SS',@OrgUnitLinkUpdate='N',@DetailUpdate='N',@StudentUpdate='Y'; " & vbNewLine & _
				"	FETCH NEXT FROM StudentsToUpdate INTO @ACTION,@PersonID,@UpdatedBy,@TransferCode,@NDOB,@House,@Form,@Distance,@StudentType,@HomeGroup,@Rank,@Youngest,@Oldest " & vbNewLine & _
				"		,@EntryYearLevel,@StartYear,@StartDate,@PrevSchoolID,@PrevLevel,@Maintenance,@CentrelinkBenefits,@Austudy " & vbNewLine & _
				"		,@ScholarshipType,@LiveAtHome,@FeeFlag,@PreEnrolment,@CampusID,@LastLevel,@Repeat,@FirstAustYear,@FirstAustSchoolID,@DateLeft " & vbNewLine & _
				"		,@ReasonLeft,@Conveyance,@LowestLevel,@HighestLevel,@TransitionalPrep,@Inactive,@InactiveFrom " & vbNewLine & _
				"		,@InactiveTo,@InactiveReason,@AttendanceRecord,@LOTEBackgroundDescription,@LOTEDifferentThanInPrimary,@QsaLearnerID,@QsaYpetFlag " & vbNewLine & _
				"		,@QsaGoal,@QsaLearnerLoginPassword,@UniversalIdentificationNumber,@ReturningStatus,@Subject,@Class,@NextClass,@LastClass " & vbNewLine & _
				"		,@StateAllowance,@StateAllowanceContactID,@StateStudentNumber,@RegistrationNumber,@CandidateNumber,@CardNumber,@LearningSupport " & vbNewLine & _
				"		,@IndividualLearningPlans,@AccessRestriction,@CategoryID,@ApplyForServicesFunding,@DetHomeSchoolLO,@NotifiedDHSLO,@NotifiedDHSLODate " & vbNewLine & _
				"		,@NotifiedDHSLOTime,@DUXAwardEligible,@ExcludeFromFeeGeneration,@AlumniClassOf,@AlumniStatus,@AlumniFamilyKey " & vbNewLine & _
				"		,@LeavingAddrID,@NewAddrID,@WithholdStudentReport,@UpdatedWhen " & vbNewLine & _
				"END " & vbNewLine & _
				"CLOSE StudentsToUpdate " & vbNewLine & _
				"DEALLOCATE StudentsToUpdate "
'			strSQL = "UPDATE [" & DB_PREFIX & schoolDatabaseName & "].[Person].Student " & vbNewLine & _
'				"SET UniversalIdentificationNumber = CONCAT('281',(Select REPLACE(Value,'281_','') AS [DET], UpdatedWhen = GETDATE(), UpdatedBy = SUSER_NAME() from [" & DB_PREFIX & schoolDatabaseName & "].[dbo].[Control] where Code = '" & DET_SCHOOLCODE & "'),Code) " & vbNewLine  & _
'				"WHERE ISNULL(UniversalIdentificationNumber,'0') = '0' AND PreEnrolment=0 AND Archived=0 AND 1=1 "

		Case REPORT_MissingCeiders
			strSQL = ""

		Case REPORT_MissingCandidates
			strSQL = "DECLARE @ACTION	char (10) " & vbNewLine  & _
				"		,@PersonID            			int 		= NULL " & vbNewLine  & _
				"		,@UpdatedBy           			varchar(50) = NULL " & vbNewLine  & _
				"		,@TransferCode                  varchar(20) = NULL " & vbNewLine  & _
				"		,@NDOB                			nvarchar(50)= NULL " & vbNewLine  & _
				"		,@House               			varchar(50) = NULL " & vbNewLine  & _
				"		,@Form                			varchar(50) = NULL " & vbNewLine  & _
				"		,@Distance            			float       = NULL " & vbNewLine  & _
				"		,@StudentType    				varchar(50) = NULL " & vbNewLine  & _
				"		,@HomeGroup    					varchar(50) = NULL " & vbNewLine  & _
				"		,@Rank   						int         = NULL " & vbNewLine  & _
				"		,@Youngest  					bit         = NULL " & vbNewLine  & _
				"		,@Oldest    	   				bit         = NULL " & vbNewLine  & _
				"		,@EntryYearLevel   				varchar(50) = NULL " & vbNewLine  & _
				"		,@StartYear       				varchar(50) = NULL " & vbNewLine  & _
				"		,@StartDate       				datetime    = NULL " & vbNewLine  & _
				"		,@StartDate_passed              bit 		= NULL " & vbNewLine  & _
				"		,@PrevSchoolID      			int         = NULL " & vbNewLine  & _
				"		,@PrevLevel      				varchar(50) = NULL " & vbNewLine  & _
				"		,@Maintenance  					bit         = NULL " & vbNewLine  & _
				"		,@CentrelinkBenefits 			bit         = NULL " & vbNewLine  & _
				"		,@Austudy  						bit         = NULL " & vbNewLine  & _
				"		,@ScholarshipType  				varchar(50) = NULL " & vbNewLine  & _
				"		,@LiveAtHome  					bit         = NULL " & vbNewLine  & _
				"		,@FeeFlag 						varchar(50) = NULL " & vbNewLine  & _
				"		,@PreEnrolment  				bit         = NULL " & vbNewLine  & _
				"		,@CampusID  					int         = NULL " & vbNewLine  & _
				"		,@LastLevel  					varchar(50) = NULL " & vbNewLine  & _
				"		,@Repeat       					bit         = NULL " & vbNewLine  & _
				"		,@FirstAustYear       			varchar(10) = NULL " & vbNewLine  & _
				"		,@FirstAustSchoolID   			int         = NULL " & vbNewLine  & _
				"		,@DateLeft 						datetime    = NULL " & vbNewLine  & _
				"		,@DateLeft_passed               bit 		= NULL " & vbNewLine  & _
				"		,@ReasonLeft 					varchar(50) = NULL " & vbNewLine  & _
				"		,@Conveyance 					varchar(50) = NULL " & vbNewLine  & _
				"		,@LowestLevel 					varchar(50) = NULL " & vbNewLine  & _
				"		,@HighestLevel					varchar(50) = NULL " & vbNewLine  & _
				"		,@TransitionalPrep  			bit         = NULL " & vbNewLine  & _
				"		,@Inactive  					bit         = NULL " & vbNewLine  & _
				"		,@InactiveFrom    				datetime    = NULL " & vbNewLine  & _
				"		,@InactiveFrom_passed           bit 		= NULL " & vbNewLine  & _
				"		,@InactiveTo 					datetime    = NULL " & vbNewLine  & _
				"		,@InactiveReason 				varchar(200)= NULL " & vbNewLine  & _
				"		,@AttendanceRecord 				varchar(50) = NULL " & vbNewLine  & _
				"		,@LOTEBackgroundDescription 	varchar(50) = NULL " & vbNewLine  & _
				"		,@LOTEDifferentThanInPrimary 	bit         = NULL " & vbNewLine  & _
				"		,@QsaLearnerID 					varchar(20) = NULL " & vbNewLine  & _
				"		,@QsaYpetFlag 					bit         = NULL " & vbNewLine  & _
				"		,@QsaGoal                       varchar(50) = NULL " & vbNewLine  & _
				"		,@QsaLearnerLoginPassword       varchar(50) = NULL " & vbNewLine  & _
				"		,@UniversalIdentificationNumber varchar(20) = NULL " & vbNewLine  & _
				"		,@ReturningStatus               varchar(50) = NULL " & vbNewLine  & _
				"		,@Subject 						varchar(50) = NULL " & vbNewLine  & _
				"		,@Class 						varchar(50) = NULL " & vbNewLine  & _
				"		,@NextClass 					varchar(50) = NULL " & vbNewLine  & _
				"		,@LastClass 					varchar(50) = NULL " & vbNewLine  & _
				"		,@StateAllowance 				varchar(50) = NULL " & vbNewLine  & _
				"		,@StateAllowanceContactID 		int         = NULL " & vbNewLine  & _
				"		,@StateStudentNumber 			varchar(20) = NULL " & vbNewLine  & _
				"		,@RegistrationNumber  			varchar(50) = NULL " & vbNewLine  & _
				"		,@CandidateNumber 				varchar(50) = NULL " & vbNewLine  & _
				"		,@CardNumber 					varchar(50) = NULL " & vbNewLine  & _
				"		,@LearningSupport 				bit         = NULL " & vbNewLine  & _
				"		,@IndividualLearningPlans 		bit         = NULL " & vbNewLine  & _
				"		,@AccessRestriction 			bit         = NULL " & vbNewLine  & _
				"		,@CategoryID 					int         = NULL " & vbNewLine  & _
				"		,@ApplyForServicesFunding  		bit         = NULL " & vbNewLine  & _
				"		,@DetHomeSchoolLO				bit         = NULL " & vbNewLine  & _
				"		,@NotifiedDHSLO					varchar(255)= NULL " & vbNewLine  & _
				"		,@NotifiedDHSLODate				datetime    = NULL " & vbNewLine  & _
				"		,@NotifiedDHSLODate_passed      bit 		= NULL " & vbNewLine  & _
				"		,@NotifiedDHSLOTime 			varchar(8)  = NULL " & vbNewLine  & _
				"		,@DUXAwardEligible 				bit         = NULL " & vbNewLine  & _
				"		,@ExcludeFromFeeGeneration      bit         = NULL " & vbNewLine  & _
				"		,@AlumniClassOf                 int         = NULL " & vbNewLine  & _
				"		,@AlumniStatus                  varchar(50) = NULL " & vbNewLine  & _
				"		,@AlumniFamilyKey               varchar(50) = NULL " & vbNewLine  & _
				"		,@LeavingAddrID                 int         = NULL " & vbNewLine  & _
				"		,@NewAddrID                     int         = NULL " & vbNewLine  & _
				"		,@WithholdStudentReport         bit         = NULL " & vbNewLine  & _
				"		,@RowCount						int			= 0 " & vbNewLine  & _
				"		,@UpdatedWhen					datetime	= NULL " & vbNewLine  & _
				"		,@NewUpdatedBy					varchar(50) = SUSER_NAME() " & vbNewLine  & _
				"		,@NewUpdatedWhen				datetime	= NULL " & vbNewLine  & _
				"DECLARE StudentsToUpdate CURSOR FOR " & vbNewLine
			strSQL = strSQL + GetReportSQL(REPORT_MissingCandidates) & vbNewLine
			strSQL = strSQL + "OPEN StudentsToUpdate " & vbNewLine & _
				"FETCH NEXT FROM StudentsToUpdate INTO @ACTION,@PersonID,@UpdatedBy,@TransferCode,@NDOB,@House,@Form,@Distance,@StudentType,@HomeGroup,@Rank,@Youngest,@Oldest " & vbNewLine & _
				"	,@EntryYearLevel,@StartYear,@StartDate,@PrevSchoolID,@PrevLevel,@Maintenance,@CentrelinkBenefits,@Austudy " & vbNewLine & _
				"	,@ScholarshipType,@LiveAtHome,@FeeFlag,@PreEnrolment,@CampusID,@LastLevel,@Repeat,@FirstAustYear,@FirstAustSchoolID,@DateLeft " & vbNewLine & _
				"	,@ReasonLeft,@Conveyance,@LowestLevel,@HighestLevel,@TransitionalPrep,@Inactive,@InactiveFrom " & vbNewLine & _
				"	,@InactiveTo,@InactiveReason,@AttendanceRecord,@LOTEBackgroundDescription,@LOTEDifferentThanInPrimary,@QsaLearnerID,@QsaYpetFlag " & vbNewLine & _
				"	,@QsaGoal,@QsaLearnerLoginPassword,@UniversalIdentificationNumber,@ReturningStatus,@Subject,@Class,@NextClass,@LastClass " & vbNewLine & _
				"	,@StateAllowance,@StateAllowanceContactID,@StateStudentNumber,@RegistrationNumber,@CandidateNumber,@CardNumber,@LearningSupport " & vbNewLine & _
				"	,@IndividualLearningPlans,@AccessRestriction,@CategoryID,@ApplyForServicesFunding,@DetHomeSchoolLO,@NotifiedDHSLO,@NotifiedDHSLODate " & vbNewLine & _
				"	,@NotifiedDHSLOTime,@DUXAwardEligible,@ExcludeFromFeeGeneration,@AlumniClassOf,@AlumniStatus,@AlumniFamilyKey " & vbNewLine & _
				"	,@LeavingAddrID,@NewAddrID,@WithholdStudentReport,@UpdatedWhen " & vbNewLine & _
				"WHILE (@@FETCH_STATUS=0 ) " & vbNewLine & _
				"BEGIN " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.PersonID_update @pPersonID=@PersonID,@pUpdatedBy=@NewUpdatedBy,@pUpdatedWhen=@UpdatedWhen,@pNewUpdatedWhen=@NewUpdatedWhen output; " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.Student_Update @ACTION=@ACTION,@PersonID=@PersonID,@UpdatedBy=@NewUpdatedBy,@TransferCode=@TransferCode " & vbNewLine & _
				"		,@NDOB=@NDOB,@House=@House,@Form=@Form,@Distance=@Distance,@StudentType=@StudentType,@HomeGroup=@HomeGroup,@Rank=@Rank,@Youngest=@Youngest,@Oldest=@Oldest " & vbNewLine & _
				"		,@EntryYearLevel=@EntryYearLevel,@StartYear=@StartYear,@StartDate=@StartDate,@StartDate_passed=@StartDate_passed,@PrevSchoolID=@PrevSchoolID " & vbNewLine & _
				"		,@PrevLevel=@PrevLevel,@Maintenance=@Maintenance,@CentrelinkBenefits=@CentrelinkBenefits,@Austudy=@Austudy " & vbNewLine & _
				"		,@ScholarshipType=@ScholarshipType,@LiveAtHome=@LiveAtHome,@FeeFlag=@FeeFlag,@PreEnrolment=@PreEnrolment,@CampusID=@CampusID,@LastLevel=@LastLevel " & vbNewLine & _
				"		,@Repeat=@Repeat,@FirstAustYear=@FirstAustYear,@FirstAustSchoolID=@FirstAustSchoolID,@DateLeft=@DateLeft " & vbNewLine & _
				"		,@DateLeft_passed=@DateLeft_passed,@ReasonLeft=@ReasonLeft,@Conveyance=@Conveyance,@LowestLevel=@LowestLevel,@HighestLevel=@HighestLevel " & vbNewLine & _
				"		,@TransitionalPrep=@TransitionalPrep,@Inactive=@Inactive,@InactiveFrom=@InactiveFrom,@InactiveFrom_passed=@InactiveFrom_passed " & vbNewLine & _
				"		,@InactiveTo=@InactiveTo,@InactiveReason=@InactiveReason,@AttendanceRecord=@AttendanceRecord,@LOTEBackgroundDescription=@LOTEBackgroundDescription " & vbNewLine & _
				"		,@LOTEDifferentThanInPrimary=@LOTEDifferentThanInPrimary,@QsaLearnerID=@QsaLearnerID,@QsaYpetFlag=@QsaYpetFlag " & vbNewLine & _
				"		,@QsaGoal=@QsaGoal,@QsaLearnerLoginPassword=@QsaLearnerLoginPassword,@UniversalIdentificationNumber=@UniversalIdentificationNumber " & vbNewLine & _
				"		,@ReturningStatus=@ReturningStatus,@Subject=@Subject,@Class=@Class,@NextClass=@NextClass,@LastClass=@LastClass " & vbNewLine & _
				"		,@StateAllowance=@StateAllowance,@StateAllowanceContactID=@StateAllowanceContactID,@StateStudentNumber=@StateStudentNumber " & vbNewLine & _
				"		,@RegistrationNumber=@RegistrationNumber,@CandidateNumber=@CandidateNumber,@CardNumber=@CardNumber,@LearningSupport=@LearningSupport " & vbNewLine & _
				"		,@IndividualLearningPlans=@IndividualLearningPlans,@AccessRestriction=@AccessRestriction,@CategoryID=@CategoryID " & vbNewLine & _
				"		,@ApplyForServicesFunding=@ApplyForServicesFunding,@DetHomeSchoolLO=@DetHomeSchoolLO,@NotifiedDHSLO=@NotifiedDHSLO,@NotifiedDHSLODate=@NotifiedDHSLODate " & vbNewLine & _
				"		,@NotifiedDHSLODate_passed=@NotifiedDHSLODate_passed,@NotifiedDHSLOTime=@NotifiedDHSLOTime,@DUXAwardEligible=@DUXAwardEligible " & vbNewLine & _
				"		,@ExcludeFromFeeGeneration=@ExcludeFromFeeGeneration,@AlumniClassOf=@AlumniClassOf,@AlumniStatus=@AlumniStatus,@AlumniFamilyKey=@AlumniFamilyKey " & vbNewLine & _
				"		,@LeavingAddrID=@LeavingAddrID,@NewAddrID=@NewAddrID,@WithholdStudentReport=@WithholdStudentReport; " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.VSRStudentUpdate @OrgUnitID=1,@PersonID=@PersonID,@TransferType='SS',@OrgUnitLinkUpdate='N',@DetailUpdate='N',@StudentUpdate='Y'; " & vbNewLine & _
				"	FETCH NEXT FROM StudentsToUpdate INTO @ACTION,@PersonID,@UpdatedBy,@TransferCode,@NDOB,@House,@Form,@Distance,@StudentType,@HomeGroup,@Rank,@Youngest,@Oldest " & vbNewLine & _
				"		,@EntryYearLevel,@StartYear,@StartDate,@PrevSchoolID,@PrevLevel,@Maintenance,@CentrelinkBenefits,@Austudy " & vbNewLine & _
				"		,@ScholarshipType,@LiveAtHome,@FeeFlag,@PreEnrolment,@CampusID,@LastLevel,@Repeat,@FirstAustYear,@FirstAustSchoolID,@DateLeft " & vbNewLine & _
				"		,@ReasonLeft,@Conveyance,@LowestLevel,@HighestLevel,@TransitionalPrep,@Inactive,@InactiveFrom " & vbNewLine & _
				"		,@InactiveTo,@InactiveReason,@AttendanceRecord,@LOTEBackgroundDescription,@LOTEDifferentThanInPrimary,@QsaLearnerID,@QsaYpetFlag " & vbNewLine & _
				"		,@QsaGoal,@QsaLearnerLoginPassword,@UniversalIdentificationNumber,@ReturningStatus,@Subject,@Class,@NextClass,@LastClass " & vbNewLine & _
				"		,@StateAllowance,@StateAllowanceContactID,@StateStudentNumber,@RegistrationNumber,@CandidateNumber,@CardNumber,@LearningSupport " & vbNewLine & _
				"		,@IndividualLearningPlans,@AccessRestriction,@CategoryID,@ApplyForServicesFunding,@DetHomeSchoolLO,@NotifiedDHSLO,@NotifiedDHSLODate " & vbNewLine & _
				"		,@NotifiedDHSLOTime,@DUXAwardEligible,@ExcludeFromFeeGeneration,@AlumniClassOf,@AlumniStatus,@AlumniFamilyKey " & vbNewLine & _
				"		,@LeavingAddrID,@NewAddrID,@WithholdStudentReport,@UpdatedWhen " & vbNewLine & _
				"END " & vbNewLine & _
				"CLOSE StudentsToUpdate " & vbNewLine & _
				"DEALLOCATE StudentsToUpdate "
'			strSQL = "UPDATE [" & DB_PREFIX & schoolDatabaseName & "].[Person].Student " & vbNewLine & _
'				"SET CandidateNumber = AllMIMStudents.[csoCeIder], UpdatedWhen = GETDATE(), UpdatedBy = SUSER_NAME() FROM [MIM_SyncReplica].[dbo].[AllMIMStudents] " & vbNewLine & _
'				"WHERE AllMIMStudents.[USIN] = Student.UniversalIdentificationNumber " & vbNewLine & _
'				"AND ISNULL(Student.CandidateNumber,'0') = '0' and Student.PreEnrolment=0 AND Archived=0 and 1=1 "

		Case REPORT_MismatchingCeiders
			strSQL = ""

		Case REPORT_MissingLockers
			strSQL = "DECLARE @this_user varchar(50), @this_personid int, @this_locker nvarchar(100) " & vbNewLine  & _
				"DECLARE StudentsToUpdate CURSOR FOR " & vbNewLine
			strSQL = strSQL + GetReportSQL(REPORT_MissingLockers) & vbNewLine
			strSQL = strSQL + "OPEN StudentsToUpdate " & vbNewLine & _
				"FETCH NEXT FROM StudentsToUpdate INTO @this_user, @this_personid, @this_locker " & vbNewLine & _
				"WHILE (@@FETCH_STATUS=0 ) " & vbNewLine & _
				"BEGIN " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.Locker_Update @ACTION='UPDATE', @PersonID=@this_personid, @UpdatedBy=@this_user, @LockerNumber=@this_locker " & vbNewLine & _
				"	FETCH NEXT FROM StudentsToUpdate INTO @this_user, @this_personid, @this_locker " & vbNewLine & _
				"END " & vbNewLine & _
				"CLOSE StudentsToUpdate " & vbNewLine & _
				"DEALLOCATE StudentsToUpdate "

		Case REPORT_MissingAccounts
			strSQL = ""

		Case REPORT_MismatchingLockers
			strSQL = ""

		Case REPORT_MissingEmails
			strSQL = "DECLARE @this_user varchar(50), @this_personid int, @this_email nvarchar(100) " & vbNewLine  & _
				"DECLARE StudentsToUpdate CURSOR FOR " & vbNewLine
			strSQL = strSQL + GetReportSQL(REPORT_MissingEmails) & vbNewLine
			strSQL = strSQL + "OPEN StudentsToUpdate " & vbNewLine & _
				"FETCH NEXT FROM StudentsToUpdate INTO @this_user, @this_personid, @this_email " & vbNewLine & _
				"WHILE (@@FETCH_STATUS=0 ) " & vbNewLine & _
				"BEGIN " & vbNewLine & _
				"	EXEC [" & DB_PREFIX & schoolDatabaseName & "].Person.PersonPhone_Update @ACTION='INSERT', @SortOrder=1, @ID=NULL, @Archived=NULL, @PersonID=@this_personid, @UpdatedBy=@this_user, @PhoneType='Email', @Number=@this_email " & vbNewLine & _
				"	FETCH NEXT FROM StudentsToUpdate INTO @this_user, @this_personid, @this_email " & vbNewLine & _
				"END " & vbNewLine & _
				"CLOSE StudentsToUpdate " & vbNewLine & _
				"DEALLOCATE StudentsToUpdate "

		Case REPORT_MismatchingEmails
			strSQL = ""

		Case Else
			strSQL = ""

	End Select

	GetUpdateSQL = strSQL

End Function

Function GetUpdateMessage()

	Dim strMessage, schoolDatabaseName, reportName

	schoolDatabaseName = document.getElementById("SchoolDatabaseName").Value
	reportName = document.getElementById("ReportName").Value

	Select Case reportName
		Case REPORT_MissingUSINs
			strMessage = Replace(UPD_CONFIRMATION, "YYYYY", "assign ALL students at " & schoolDatabaseName & " the generated 'NewUSIN' value")

		Case REPORT_MissingCandidates
			strMessage = Replace(UPD_CONFIRMATION, "YYYYY", "update ALL student Candidate Numbers at " & schoolDatabaseName & " with the MIM CeIder number for the matching USIN")

		Case REPORT_MissingLockers
			strMessage = Replace(UPD_CONFIRMATION, "YYYYY", "update ALL student Locker Numbers at " & schoolDatabaseName & " with the MIM AccountName for the matching USIN")

		Case REPORT_MissingEmails
			strMessage = Replace(UPD_CONFIRMATION, "YYYYY", "update ALL student Emails at " & schoolDatabaseName & " with the value derived from the MIM AccountName for the matching USIN")

		Case Else
			strMessage = ""

	End Select

	GetUpdateMessage = strMessage

End Function

Sub GetTableData()

	Dim strSQL, strValue, oRecordSet, oSchoolDatabase, schoolDatabaseName, studentResultTable, i, rowCount, oUpdateButton, tdClass, isFormerStudent, reportName

	' get school code from combo box selection
	Set oSchoolDatabase = document.getElementById("SchoolDatabaseName")
	schoolDatabaseName = oSchoolDatabase.Value
	Set oUpdateButton = document.getElementById("btnUpdateStudents")
	oUpdateButton.disabled = "disabled"
	If schoolDatabaseName = "" Then
		document.getElementById("SQLUpdateCommand").Value = ""
		document.getElementById("SQLRows").Value = ""
		Exit Sub
	Else
		GetSchoolInfo
	End If

	strSQL = GetReportSQL("")

	If strSQL = "" Then
		document.getElementById("SQLUpdateCommand").Value = ""
		document.getElementById("SQLSelectCommand").Value = ""
		Results.innerHTML = ""
		SchoolInfo.innerHTML = ""
		document.getElementById("SQLRows").Value = ""
		Exit Sub
	End If

	reportName = document.getElementById("ReportName").Value

	If DEBUG_FLAG Then
		document.getElementById("SQLSelectCommand").Value = strSQL
		'document.getElementById("SQLSelectCommand").rows = 13
	'Else
	'	document.getElementById("SQLSelectCommand").Class = "hide"
	End If
	Set oRecordSet = oConnection.Execute(strSQL)
	
	studentResultTable = "<table class=""data"" border=""1"">"
	studentResultTable = studentResultTable & "<thead><tr>"
	For i = 0 To oRecordSet.Fields.Count - 1
		studentResultTable = studentResultTable & _
		"<th>" & _
		oRecordSet.Fields(i).Name & _
		"</th>"
	Next
	studentResultTable = studentResultTable & "</tr></thead><tbody>"

	If oRecordSet.EOF Then
		document.getElementById("SQLRows").Value = "No matching " & schoolDatabaseName & " students found."
		document.getElementById("SQLUpdateCommand").Value = ""
	    printline "No students with " & reportName & " detected for school: " & schoolDatabaseName & ". Please select the next school."
	Else
		
		rowCount = 0
		isFormerStudent = false
		Do While Not oRecordSet.EOF
			rowCount = rowCount + 1
			studentResultTable = studentResultTable & "<tr>"
			For i = 0 To oRecordSet.Fields.Count - 1
				strValue = "&nbsp;"
				tdClass = "data"
				If (Len(oRecordSet.Fields(i).Value) > 0) Then
					strValue = oRecordSet.Fields(i).Value
				End If
				If ((LEFT(oRecordSet.Fields(i).Name,4) = "MIM.")) _
				and (Len(oRecordSet.Fields(i).Value) > 0) Then
					tdClass = "boldred"
					If reportName = REPORT_MissingUSINs Then
						isFormerStudent = true
					End If
				ElseIf (oRecordSet.Fields(i).Name = "NewUSIN") Then
					tdClass = "bold"
				End If
				studentResultTable = studentResultTable & _
				"<td class='" & tdClass & "'>" & strValue & "</td>"	
			Next
			studentResultTable = studentResultTable & "</tr>"
			oRecordSet.MoveNext
		Loop	
		studentResultTable = studentResultTable & "</tbody></table>"

		If (not isFormerStudent) And (GetUpdateSQL() <> "") Then
			oUpdateButton.disabled = ""
		End If
		document.getElementById("SQLRows").Value = "[" & rowCount & "] " & schoolDatabaseName & " students found with " & reportName & "!"
	    printline "[" & rowCount & "] students with " & reportName & " detected for school: " & schoolDatabaseName & ".  Please update students!"

	End If
	
	oRecordSet.Close

	Results.innerHTML = studentResultTable
End Sub

Sub btnUpdateStudents_OnClick()

	Dim strSQL, oSchoolDatabase, schoolDatabaseName, oRecordSet, doUpdate, confirmationMessage

	' get school code from combo box selection
	Set oSchoolDatabase = document.getElementById("SchoolDatabaseName")
	schoolDatabaseName = oSchoolDatabase.Value
	If schoolDatabaseName = "" Then
		Exit Sub
	End If

	strSQL = GetUpdateSQL()

	If DEBUG_FLAG Then
		document.getElementById("SQLUpdateCommand").Value = strSQL
		'document.getElementById("SQLUpdateCommand").rows = 18
	'Else
	'	document.getElementById("SQLUpdateCommand").Class = "hide"
	End If

	' Check for coding inconsistency!
	If strSQL = "" Then
		Call MsgBox( "Error: No UPDATE support for selected report!", vbOKOnly, "Error" )
		Exit Sub
	End If

	doUpdate = MsgBox( GetUpdateMessage(), vbOKCancel + vbApplicationModal + vbInformation, UPD_TITLE )
	If doUpdate = vbOK Then
		Set oRecordSet = oConnection.Execute(strSQL)

		' Refresh table data
		Call MsgBox( "Student(s) updated OK.  Press OK to continue ...", vbOKOnly, "Success" )
		GetTableData
	End If
	
End Sub

Sub CopyHTML()
    Dim oTable
    Set oTable = document.getelementbyid("Results") '("DataArea")
    
    If(oTable Is Nothing) then 
       MsgBox "There is no data displayed", vbExclamation, oNewStudents.applicationName
       Exit Sub
    End If

    window.clipboardData.SetData "text", oTable.outerHtml
  
    MsgBox "HMTL data copied to clipboard successfully", vbInformation, oNewStudents.applicationName

 End Sub

Sub OpenHelpFile()
   Dim Shex, FSO 'As Object
   Dim tgtfile 'As String
   Set FSO = CreateObject("Scripting.FileSystemObject")
   Set Shex = CreateObject("Shell.Application")
   tgtfile = "" & FSO.GetAbsolutePathName(".") & "\" & PDF_HELP
   Shex.Open (tgtfile)
End Sub

Sub Quitsub
	oConnection.Close
    self.close()
End Sub

-->
</script>

<HTA:APPLICATION ID="oNewStudents"
	APPLICATIONNAME="SQLTableViewer"
	APPLICATION="yes"
	CAPTION="yes"
	SINGLEINSTANCE="yes"
	ICON="unifyico1.ico"
	SYSMENU="yes">
</HTA:APPLICATION>
</head>
<body onLoad="GetSchoolData">
<table border="0">
    <tbody>
        <tr>
			<td>
				<table class="data" border="0">
					<tbody>
						<tr>
							<td align="right">SchoolCode:</td>
							<td colspan="1">
								<select id="SchoolDatabaseName" name="SchoolDatabaseName"></select>
							</td>
						</tr>
						<tr>
							<td align="right">Report:</td>
							<td colspan="1">
								<select id="ReportName" name="ReportName"></select>
							</td>
						</tr>
						<tr>
							<td />
							<td colspan="1">
								<input id="btnGetStudents" type="button" value=" Search " name="Search" onClick="GetTableData">
								<input id="Copy HTML" type="button" value=" Copy HTML " name="Copy HTML"  onClick="CopyHTML">
								<input id="Help" type="button" value=" HTA Help " name="HTA Help"  onClick="OpenHelpFile">
								<input id="Quitbutton" type="button" value="  Quit  " name="Quit_button"  onClick="QuitSub">
							</td>
						</tr>
					</tbody>
				</table>
			</td>
			<td/>
		</tr>
		<tr>
			<td colspan="2">
				<nobr Id="SchoolInfo"></nobr>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<textarea class="sqlrows" name"SQLRows" id="SQLRows" readonly="readonly" rows="1" cols="100%"></textarea>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<table class="data" border="0"=>
					<tbody>
						<tr>
							<td colspan="100">
								<input type="button" id="btnUpdateStudents" value=" Update Students ">
							</td>
						</tr>
					</tbody>
				</table>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<nobr Id="Results"></nobr>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<textarea class="hide" name"SQLSelectCommand" id="SQLSelectCommand" readonly="readonly" rows="13" cols="100%"></textarea><!-- class="select"/"hide" -->
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<textarea class="hide" name"SQLUpdateCommand" id="SQLUpdateCommand" readonly="readonly" rows="18" cols="100%"></textarea><!-- class="update"/"hide" -->
			</td>
		</tr>
	</tbody>
</table>
<hr/>
<span id="DataArea"></span>
</body>
</html>
