<html>
<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>DBB Possible Duplicate Identity Report</title>

<style type="text/css">
body      {background-color:wheat;}
table     {width:100%;font-family:Tahoma; font-size:70%;background-color:lightgrey;}
td.tbname {font-weight:bold; background-color:papayawhip;}
td.head   {font-weight:bold; background-color:buttonface;}
td.data   {background-color:cornsilk;}
</style>

<script type="text/vbscript">
<!--
Option Explicit

Const AD_OPEN_FORWARD_ONLY = 0
Const AD_OPEN_STATIC = 3
Const AD_LOCK_READ_ONLY = 1
Const AD_LOCK_OPTIMISTIC = 3
Const AD_USE_CLIENT = 3

'Customizable parameters:

Const MAX_ROWS      = 1000
Const SQL_SERVER    = "occcp-db004.dbb.local"
Const DATABASE_NAME = "FIMSynchronizationService"
Const CONN_STRING = "Provider=SQLOLEDB.1;Persist Security Info=True;Integrated Security=SSPI;Initial Catalog=xxx1;Data Source=xxx2;Timeout=120"

'Add the names of the tables or views you want to display here:
Dim tableNames
tableNames = array("dbo.vw_PossibleDuplicates")

Sub Reload
    Dim oData
    Set oData = document.getElementById("DataArea")
    oData.InnerHTML = "<table ID=""dataTable""></table>"
    GetTableData()
End Sub

Sub GetTableData
   Dim objConnection, strConnection
   strConnection = Replace(Replace(CONN_STRING, "xxx2", SQL_SERVER), "xxx1", DATABASE_NAME)
   Set objConnection = CreateObject("ADODB.Connection")
   objConnection.ConnectionTimeout = 600
   objConnection.Open strConnection
   Dim objRecordset
   Set objRecordset = CreateObject("ADODB.Recordset")
   objRecordset.ActiveConnection = objConnection
   objRecordset.ActiveConnection.CommandTimeout = 600
   objRecordset.CursorLocation = AD_USE_CLIENT

   Dim tableName, tableData, oTable, oRow, oTbNameCell, oCell
   Set oTable = document.getElementById("dataTable")
      
   For Each tableName in tableNames
      Set oRow              = oTable.insertRow()
      Set oTbNameCell       = oRow.insertCell() 
      oTbNameCell.ClassName = "tbname"
      tableName = "( " & _
      	"SELECT top 100 percent" & _
		"	Replace(mv1.displayName,' ','_') as displayName1, " & _
		"	mv1.employeeID as employeeID1, " & _
		"	mv1.csoLegacyEmployeeID as legacyID1, " & _
		"	mv1.employeeStatus as employeeStatus1, " & _
		"	mv1.AccountName as AccountName1, " & _
		"	mv1.csoBirthDate as csoBirthDate1, " & _
		"	mv1.physicalDeliveryOfficeName as physicalDeliveryOfficeName1, " & _
		"	Replace(mv2.displayName,' ','_') as displayName2, " & _
		"	mv2.employeeID as employeeID2, " & _
		"	mv2.csoLegacyEmployeeID as legacyID2, " & _
		"	mv2.employeeStatus as employeeStatus2, " & _
		"	mv2.AccountName as AccountName2, " & _
		"	mv2.csoBirthDate as csoBirthDate2, " & _
		"	mv2.physicalDeliveryOfficeName as physicalDeliveryOfficeName2 " & _
		"From dbo.mms_metaverse mv1 with (nolock) " & _
		"Inner Join dbo.mms_metaverse mv2 with (nolock) " & _
		"	On mv2.object_type = 'person' " & _
		"	And mv2.PersonType = 'Staff' " & _
		"	And (mv1.displayName = mv2.displayName) " & _
		"Where mv1.object_type = 'person' " & _
		"And mv1.object_id > mv2.object_id " & _
		"And mv1.PersonType = 'Staff' " & _
		"/*And (mv1.employeeID is not null or mv2.employeeID is not null)*/ " & _
		"Order by mv1.displayName " & _
		") X"
      oTbNameCell.InnerText = tableName 
     
      objRecordset.Open "SELECT * FROM " & tableName, objConnection, _
                        AD_OPEN_FORWARD_ONLY, AD_LOCK_READ_ONLY
      
      If Not objRecordset.eof Then
         objRecordset.MoveFirst
         Set oRow   = oTable.insertRow()
         Dim curField
         For each curField in objRecordset.fields
            Set oCell  = oRow.insertCell() 
            oCell.ClassName = "head"
            oCell.InnerText =  Trim(curField.Name) 
         Next
        oTbNameCell.colSpan = objRecordset.fields.count
      End If
  
      Dim rowCounter 
      rowCounter = 0
      Do While Not objRecordset.eof
         Set oRow   = oTable.insertRow()
         For each curField in objRecordset.fields
            Set oCell  = oRow.insertCell() 
            oCell.ClassName = "data"
            oCell.InnerText =  Trim(curField) 
         Next
         objRecordset.MoveNext

         rowCounter = rowCounter + 1
         If rowCounter = MAX_ROWS Then
            Exit Do
         End If
      Loop

		' Add row count row
		Set oRow   = oTable.insertRow()
		Set oCell  = oRow.insertCell() 
		oCell.ClassName = "head"
		oCell.InnerText =  "Total Records: " & CStr(rowCounter)
		oCell.colSpan = objRecordset.fields.count

      objRecordset.Close
   Next
   objConnection.Close
End Sub

Sub CopyHTML()
    Dim oTable
    Set oTable = document.getelementbyid("DataArea")
    
    If(oTable Is Nothing) then 
       MsgBox "There is no data displayed", vbExclamation, oMyApp.applicationName
       Exit Sub
    End If

    window.clipboardData.SetData "text", oTable.outerHtml
  
    MsgBox "HMTL data copied to clipboard successfully", vbInformation, oMyApp.applicationName

 End Sub

Sub Quitsub
     self.close()
End Sub

-->
</script>

<HTA:APPLICATION ID="oMyApp"
APPLICATIONNAME="SQLTableViewer"
APPLICATION="yes"
CAPTION="yes"
SINGLEINSTANCE="yes"
ICON="unifyico1.ico"
SYSMENU="yes">
</HTA:APPLICATION>
</head>

<body onLoad="GetTableData">
<span id="DataArea">
    <table ID="dataTable"></table>
</span>
<p>
<input id="Refresh" type="button" value=" Refresh " name="Refresh"  onClick="Reload">
<input id="Copy HTML" type="button" value=" Copy HTML " name="Copy HTML"  onClick="CopyHTML">
<input id="Quitbutton" type="button" value="  Quit  " name="Quit_button"  onClick="QuitSub">
<p>
</body>
</html>
